url_api = "https://re.jrc.ec.europa.eu/api/seriescalc?lat=45&lon=8&startyear=2015&endyear=2016&month=0&showtemperatures=1&outputformat=json&browser=1"
#revoir pour \'PVGIS-ERA5\'
"""
liste des clés : Rayonnement horaire (moyenne de 2007 à 2020 pour chaque jour)
lat : (51°05'21" N à 41°19'N)
lon : (5°09'04" W à 9°33'36"E)
raddatabase : in {"PVGIS-ERA5" ; "PVGIS-COSMO"}, pour les données Européennes la première devrait suffir/convenir.
startyear :
endyear :
month : 0 (to have data for all months)
showtemperatures : 1
outputformat : json
browser : in {0 ; 1} (indic(if you access the web service from a web browser and want to save the data to a file.))



pvtechchoice : in {"crystSI","CIS",CdTe","Inconnu"}, pour comparer ? au moins tracer une carte à technologie PV fixe ?!
(horizon?)
"""
import requests
import pandas as pd
import csv

req=requests.get(url_api)

wb = req.json()

import json
text = json.dumps(wb, sort_keys=True, indent=4)
wbo = wb['outputs']
texto = json.dumps(wbo, sort_keys=True, indent=4)
wboh = wb['outputs']['hourly']
textoh = json.dumps(wboh, sort_keys=True, indent=4)
#info = json.loads(data)
new_textoh=textoh[6:-2]
new_new='{'+textoh[1:2]+':'+textoh[2:-1]+'}'
textoo = texto[:16]+'{'+texto[17:3268907]+'}'+texto[3268908:]

listext=json.loads(textoh)

#with open(text) as datafile:
#    data = json.load(datafile)
#retail = pd.DataFrame(data)
#df0 = pd.read_json(texto, orient='index')
#df = pd.read_json(listext, lines=True)
df = pd.DataFrame(listext)
df

"""Comment partitionner l'espace ?
pour l'instant : pas de 0.1 en longitude / 0.05 en latitude NON : 0.01 pour tous !
lat : (51°05'21" N à 41°19'N)
lon : (5°09'04" W à 9°33'36"E)
"""


startyear = 2016
endyear = 2016
c = 0
df0 = pd.DataFrame(columns=['G(i)','T2m','WS10m','time','lat','lon'])
for lon in [i/100 for i in range(0,500,1)]:
  for lat in [j/100 for j in range(4400,4900,1)]:
      url = "https://re.jrc.ec.europa.eu/api/seriescalc?lat="+str(lat)+"&lon="+str(lon)+"&startyear="+str(startyear)+"&endyear="+str(endyear)+"&month=0&showtemperatures=1&outputformat=json&browser=1"
      r =requests.get(url)
      w = r.json()['outputs']['hourly']
      t = json.dumps(w, sort_keys=True, indent=4)
      l =json.loads(t)
      df1 = pd.DataFrame(l)
      df1=df1.drop(['H_sun','Int'], axis=1)
      df1['lat']=lat
      df1['lon']=lon
      df0 = pd.concat([df0,df1])
      c+=1
      print(c/(500**2))

df0
